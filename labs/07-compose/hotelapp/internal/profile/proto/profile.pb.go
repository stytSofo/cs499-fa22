// Code generated by protoc-gen-go. DO NOT EDIT.
// source: profile.proto

/*
Package profile is a generated protocol buffer package.

It is generated from these files:
	profile.proto

It has these top-level messages:
	Request
	Result
	Hotel
	Address
	Image
*/
package profile

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	HotelIds []string `protobuf:"bytes,1,rep,name=hotelIds" json:"hotelIds,omitempty"`
	Locale   string   `protobuf:"bytes,2,opt,name=locale" json:"locale,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetHotelIds() []string {
	if m != nil {
		return m.HotelIds
	}
	return nil
}

func (m *Request) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

type Result struct {
	Hotels []*Hotel `protobuf:"bytes,1,rep,name=hotels" json:"hotels,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Result) GetHotels() []*Hotel {
	if m != nil {
		return m.Hotels
	}
	return nil
}

type Hotel struct {
	Id          string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	PhoneNumber string   `protobuf:"bytes,3,opt,name=phoneNumber" json:"phoneNumber,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Address     *Address `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
	Images      []*Image `protobuf:"bytes,6,rep,name=images" json:"images,omitempty"`
}

func (m *Hotel) Reset()                    { *m = Hotel{} }
func (m *Hotel) String() string            { return proto.CompactTextString(m) }
func (*Hotel) ProtoMessage()               {}
func (*Hotel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Hotel) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Hotel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Hotel) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *Hotel) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Hotel) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Hotel) GetImages() []*Image {
	if m != nil {
		return m.Images
	}
	return nil
}

type Address struct {
	StreetNumber string  `protobuf:"bytes,1,opt,name=streetNumber" json:"streetNumber,omitempty"`
	StreetName   string  `protobuf:"bytes,2,opt,name=streetName" json:"streetName,omitempty"`
	City         string  `protobuf:"bytes,3,opt,name=city" json:"city,omitempty"`
	State        string  `protobuf:"bytes,4,opt,name=state" json:"state,omitempty"`
	Country      string  `protobuf:"bytes,5,opt,name=country" json:"country,omitempty"`
	PostalCode   string  `protobuf:"bytes,6,opt,name=postalCode" json:"postalCode,omitempty"`
	Lat          float32 `protobuf:"fixed32,7,opt,name=lat" json:"lat,omitempty"`
	Lon          float32 `protobuf:"fixed32,8,opt,name=lon" json:"lon,omitempty"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Address) GetStreetNumber() string {
	if m != nil {
		return m.StreetNumber
	}
	return ""
}

func (m *Address) GetStreetName() string {
	if m != nil {
		return m.StreetName
	}
	return ""
}

func (m *Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Address) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Address) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Address) GetLat() float32 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Address) GetLon() float32 {
	if m != nil {
		return m.Lon
	}
	return 0
}

type Image struct {
	Url     string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Default bool   `protobuf:"varint,2,opt,name=default" json:"default,omitempty"`
}

func (m *Image) Reset()                    { *m = Image{} }
func (m *Image) String() string            { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()               {}
func (*Image) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Image) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Image) GetDefault() bool {
	if m != nil {
		return m.Default
	}
	return false
}

func init() {
	proto.RegisterType((*Request)(nil), "profile.Request")
	proto.RegisterType((*Result)(nil), "profile.Result")
	proto.RegisterType((*Hotel)(nil), "profile.Hotel")
	proto.RegisterType((*Address)(nil), "profile.Address")
	proto.RegisterType((*Image)(nil), "profile.Image")
}

func init() { proto.RegisterFile("profile.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0xc1, 0x6e, 0xe2, 0x30,
	0x10, 0x86, 0x95, 0x40, 0x12, 0x18, 0x76, 0x11, 0xb2, 0x56, 0x2b, 0x6b, 0x0f, 0xab, 0x28, 0x87,
	0x2a, 0xea, 0x01, 0x55, 0x70, 0xee, 0xa1, 0xea, 0xa5, 0x5c, 0x7a, 0xf0, 0x1b, 0x98, 0x78, 0x28,
	0x96, 0x4c, 0x9c, 0xda, 0xce, 0x81, 0xe7, 0xeb, 0x33, 0xf4, 0x7d, 0x2a, 0x3b, 0x0e, 0xd0, 0xde,
	0xe6, 0xff, 0x66, 0x9c, 0x99, 0x4f, 0x0a, 0xfc, 0xee, 0x8c, 0x3e, 0x48, 0x85, 0xeb, 0xce, 0x68,
	0xa7, 0x49, 0x11, 0x63, 0xf5, 0x08, 0x05, 0xc3, 0xf7, 0x1e, 0xad, 0x23, 0xff, 0x60, 0x76, 0xd4,
	0x0e, 0xd5, 0x4e, 0x58, 0x9a, 0x94, 0x93, 0x7a, 0xce, 0x2e, 0x99, 0xfc, 0x85, 0x5c, 0xe9, 0x86,
	0x2b, 0xa4, 0x69, 0x99, 0xd4, 0x73, 0x16, 0x53, 0xf5, 0x00, 0x39, 0x43, 0xdb, 0x2b, 0x47, 0xee,
	0x20, 0x0f, 0xd3, 0xc3, 0xdb, 0xc5, 0x66, 0xb9, 0x1e, 0x37, 0xbe, 0x78, 0xcc, 0x62, 0xb7, 0xfa,
	0x48, 0x20, 0x0b, 0x84, 0x2c, 0x21, 0x95, 0x82, 0x26, 0xe1, 0x7b, 0xa9, 0x14, 0x84, 0xc0, 0xb4,
	0xe5, 0xa7, 0x71, 0x43, 0xa8, 0x49, 0x09, 0x8b, 0xee, 0xa8, 0x5b, 0x7c, 0xed, 0x4f, 0x7b, 0x34,
	0x74, 0x12, 0x5a, 0xb7, 0xc8, 0x4f, 0x08, 0xb4, 0x8d, 0x91, 0x9d, 0x93, 0xba, 0xa5, 0xd3, 0x61,
	0xe2, 0x06, 0x91, 0x7b, 0x28, 0xb8, 0x10, 0x06, 0xad, 0xa5, 0x59, 0x99, 0xd4, 0x8b, 0xcd, 0xea,
	0x72, 0xda, 0xd3, 0xc0, 0xd9, 0x38, 0xe0, 0x2d, 0xe4, 0x89, 0xbf, 0xa1, 0xa5, 0xf9, 0x0f, 0x8b,
	0x9d, 0xc7, 0x2c, 0x76, 0xab, 0xcf, 0x04, 0x8a, 0xf8, 0x98, 0x54, 0xf0, 0xcb, 0x3a, 0x83, 0xe8,
	0xe2, 0x91, 0x83, 0xd1, 0x37, 0x46, 0xfe, 0x03, 0xc4, 0x7c, 0x35, 0xbc, 0x21, 0xde, 0xbd, 0x91,
	0xee, 0x1c, 0x05, 0x43, 0x4d, 0xfe, 0x40, 0x66, 0x1d, 0x77, 0x18, 0x9d, 0x86, 0x40, 0x28, 0x14,
	0x8d, 0xee, 0x5b, 0x67, 0xce, 0xc1, 0x66, 0xce, 0xc6, 0xe8, 0x77, 0x74, 0xda, 0x3a, 0xae, 0x9e,
	0xb5, 0x40, 0x9a, 0x0f, 0x3b, 0xae, 0x84, 0xac, 0x60, 0xa2, 0xb8, 0xa3, 0x45, 0x99, 0xd4, 0x29,
	0xf3, 0x65, 0x20, 0xba, 0xa5, 0xb3, 0x48, 0x74, 0x5b, 0x6d, 0x21, 0x0b, 0xa2, 0xbe, 0xd5, 0x1b,
	0x15, 0x5d, 0x7c, 0xe9, 0x17, 0x0b, 0x3c, 0xf0, 0x5e, 0xb9, 0x70, 0xff, 0x8c, 0x8d, 0x71, 0x9f,
	0x87, 0x7f, 0x6a, 0xfb, 0x15, 0x00, 0x00, 0xff, 0xff, 0x31, 0x8b, 0x62, 0x62, 0x64, 0x02, 0x00,
	0x00,
}
